<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:i="using:Avalonia.Xaml.Interactivity"
	         xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
			 xmlns:controls="using:Avalonia.Controls"
			 xmlns:resources="using:Zametek.Resource.ProjectPlan"
			 xmlns:local="using:Zametek.View.ProjectPlan"
			 xmlns:sys="using:System"
			 xmlns:vm="using:Zametek.ViewModel.ProjectPlan"
			 xmlns:u="https://irihi.tech/ursa"
			 x:DataType="vm:ArrowGraphSettingsManagerViewModel"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Zametek.View.ProjectPlan.ArrowGraphSettingsManagerView">
	<UserControl.Resources>
		<local:ColorFormatToColorConverter x:Key="colorFormatToColorConverter"/>

		<local:ManagedActivitySeveritySortComparer x:Key="slackLimitSortComparer" SortMemberPath="SlackLimit"/>
		<local:ManagedActivitySeveritySortComparer x:Key="criticalityWeightSortComparer" SortMemberPath="CriticalityWeight"/>
		<local:ManagedActivitySeveritySortComparer x:Key="fibonacciWeightSortComparer" SortMemberPath="FibonacciWeight"/>
		<local:ManagedActivitySeveritySortComparer x:Key="colorFormatSortComparer" SortMemberPath="ColorFormat"/>
	</UserControl.Resources>

	<DockPanel Margin="7">
		<ScrollViewer DockPanel.Dock="Right"
					  VerticalScrollBarVisibility="Hidden"
					  HorizontalScrollBarVisibility="Disabled">
			<DockPanel Margin="11,0,0,0">
				<Button DockPanel.Dock="Top"
						IsTabStop="True"
						Margin="0,0,0,7"
						Height="25" Width="75"
						VerticalAlignment="Center"
						VerticalContentAlignment="Center"
						Command="{Binding Path=AddManagedActivitySeverityCommand, Mode=OneWay}"
						Content="{x:Static resources:Labels.Label_AddManagedActivitySeverity}"/>

				<Button DockPanel.Dock="Top"
						IsTabStop="True"
						Margin="0,0,0,11"
						Height="25" Width="75"
						VerticalAlignment="Center"
						VerticalContentAlignment="Center"
						Command="{Binding Path=RemoveManagedActivitySeveritiesCommand, Mode=OneWay}"
						Content="{x:Static resources:Labels.Label_DeleteManagedActivitySeverities}"/>

				<Grid/>
			</DockPanel>
		</ScrollViewer>

		<DataGrid Name="activitySeverities"
				  FrozenColumnCount="1"
				  AutoGenerateColumns="False"
				  RowHeight="30"
				  ItemsSource="{Binding Path=ActivitySeverities, Mode=OneWay}"
				  SelectionMode="Extended"
				  CanUserResizeColumns="True"
				  CanUserSortColumns="True"
				  GridLinesVisibility="All"
				  CanUserReorderColumns="True">
			<DataGrid.Styles>
				<Style Selector="DataGridRow Grid.editable">
					<Setter Property="Background" Value="{DynamicResource EditableCellGridBackgroundBrush}"/>
				</Style>
				<Style Selector="DataGridRow:not(:pointerover) Grid.editable">
					<Setter Property="Background" Value="{DynamicResource EditableCellGridBackgroundBrush}"/>
				</Style>
				<Style Selector="DataGridRow:not(:selected) Grid.editable">
					<Setter Property="Background" Value="{DynamicResource EditableCellGridBackgroundBrush}"/>
				</Style>
				<Style Selector="DataGridRow:selected Grid.editable">
					<Setter Property="Background" Value="{DynamicResource EditableSelectedCellGridBackgroundBrush}"/>
				</Style>
				<Style Selector="DataGridRow:pointerover Grid.editable">
					<Setter Property="Background" Value="{DynamicResource EditableHoverCellGridBackgroundBrush}"/>
				</Style>
				<!--<Style Selector="DataGridCell:selected:pointerover Grid.editable">
					<Setter Property="Background" Value="Orange"/>
				</Style>-->
				<Style Selector="DataGridCell:selected:current:focus Grid.editable">
					<Setter Property="Background" Value="{DynamicResource EditableSelectedCurrentFocusCellGridBackgroundBrush}"/>
				</Style>
				<!--<Style Selector="DataGridCell:selected:pointerover:current:focus Grid.editable">
					<Setter Property="Background" Value="Green"/>
				</Style>-->
			</DataGrid.Styles>

			<i:Interaction.Behaviors>
				<ia:EventTriggerBehavior EventName="SelectionChanged"
										 SourceObject="{Binding #activitySeverities}">
					<ia:InvokeCommandAction x:DataType="vm:ArrowGraphSettingsManagerViewModel"
											Command="{Binding Path=SetSelectedManagedActivitySeveritiesCommand, Mode=OneWay}"
											PassEventArgsToCommand="True" />
				</ia:EventTriggerBehavior>
			</i:Interaction.Behaviors>

			<DataGrid.Columns>
				<!--This needs to be added due to an issue with Avalonia not allowing editing in the first column-->
				<DataGridTemplateColumn CanUserResize="False"
										CanUserReorder="False"
										CanUserSort="False"
										Width="1">
					<DataGridTemplateColumn.HeaderTemplate>
						<DataTemplate>
							<Grid/>
						</DataTemplate>
					</DataGridTemplateColumn.HeaderTemplate>

					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Grid/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn CanUserResize="True"
										CanUserReorder="True"
										CanUserSort="True"
										CustomSortComparer="{StaticResource slackLimitSortComparer}"
										Width="95">
					<DataGridTemplateColumn.HeaderTemplate>
						<DataTemplate>
							<TextBlock VerticalAlignment="Center"
									   Margin="0"
									   Padding="3"
									   Text="{x:Static resources:Labels.Label_SlackLimit}"
									   ToolTip.Tip="{x:Static resources:ToolTips.ToolTip_SlackLimit}"/>
						</DataTemplate>
					</DataGridTemplateColumn.HeaderTemplate>

					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Grid Name="slackLimitGrid"
								  VerticalAlignment="Stretch"
								  Classes="editable">

								<i:Interaction.Behaviors>
									<ia:DataTriggerBehavior Binding="{Binding Path=SlackLimit}" ComparisonCondition="Equal" Value="{x:Static sys:Int32.MaxValue}">
										<ia:ChangePropertyAction TargetObject="{Binding #slackLimitGrid}" PropertyName="Background" Value="Transparent" />
									</ia:DataTriggerBehavior>
								</i:Interaction.Behaviors>

								<TextBlock Name="slackLimitTextBlock"
										   VerticalAlignment="Center"
										   Margin="0"
										   Padding="3"
										   IsVisible="True"
										   Text="{Binding Path=SlackLimit, Mode=OneWay}">
									<i:Interaction.Behaviors>
										<ia:DataTriggerBehavior Binding="{Binding Path=SlackLimit}" ComparisonCondition="Equal" Value="{x:Static sys:Int32.MaxValue}">
											<ia:ChangePropertyAction TargetObject="{Binding #slackLimitTextBlock}" PropertyName="IsVisible" Value="False" />
										</ia:DataTriggerBehavior>
										<ia:DataTriggerBehavior Binding="{Binding Path=SlackLimit}" ComparisonCondition="NotEqual" Value="{x:Static sys:Int32.MaxValue}">
											<ia:ChangePropertyAction TargetObject="{Binding #slackLimitTextBlock}" PropertyName="IsVisible" Value="True" />
										</ia:DataTriggerBehavior>
									</i:Interaction.Behaviors>
								</TextBlock>

								<TextBlock Name="maxTextBlock"
										   VerticalAlignment="Center"
										   Margin="0"
										   Padding="3"
										   IsVisible="False"
										   Text="{x:Static resources:Labels.Label_Max}">
									<i:Interaction.Behaviors>
										<ia:DataTriggerBehavior Binding="{Binding Path=SlackLimit}" ComparisonCondition="Equal" Value="{x:Static sys:Int32.MaxValue}">
											<ia:ChangePropertyAction TargetObject="{Binding #maxTextBlock}" PropertyName="IsVisible" Value="True" />
										</ia:DataTriggerBehavior>
										<ia:DataTriggerBehavior Binding="{Binding Path=SlackLimit}" ComparisonCondition="NotEqual" Value="{x:Static sys:Int32.MaxValue}">
											<ia:ChangePropertyAction TargetObject="{Binding #maxTextBlock}" PropertyName="IsVisible" Value="False" />
										</ia:DataTriggerBehavior>
									</i:Interaction.Behaviors>
								</TextBlock>
							</Grid>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>

					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<Grid Name="slackLimitEditableGrid"
								  VerticalAlignment="Stretch">

								<i:Interaction.Behaviors>
									<ia:DataTriggerBehavior Binding="{Binding Path=SlackLimit}" ComparisonCondition="Equal" Value="{x:Static sys:Int32.MaxValue}">
										<ia:ChangePropertyAction TargetObject="{Binding #slackLimitEditableGrid}" PropertyName="Background" Value="Transparent" />
									</ia:DataTriggerBehavior>
								</i:Interaction.Behaviors>

								<u:NumericIntUpDown Name="slackLimitTextBox"
													Value="{Binding Path=SlackLimit, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
													VerticalAlignment="Center"
												    ShowButtonSpinner="False"
													IsVisible="True"
												    Margin="0"
												    Padding="0"
												    Minimum="0">
									<i:Interaction.Behaviors>
										<ia:DataTriggerBehavior Binding="{Binding Path=SlackLimit}" ComparisonCondition="Equal" Value="{x:Static sys:Int32.MaxValue}">
											<ia:ChangePropertyAction TargetObject="{Binding #slackLimitTextBox}" PropertyName="IsVisible" Value="False" />
										</ia:DataTriggerBehavior>
										<ia:DataTriggerBehavior Binding="{Binding Path=SlackLimit}" ComparisonCondition="NotEqual" Value="{x:Static sys:Int32.MaxValue}">
											<ia:ChangePropertyAction TargetObject="{Binding #slackLimitTextBox}" PropertyName="IsVisible" Value="True" />
										</ia:DataTriggerBehavior>
									</i:Interaction.Behaviors>
								</u:NumericIntUpDown>

								<TextBlock Name="maxEditableTextBlock"
										   VerticalAlignment="Center"
										   Margin="0"
										   Padding="3"
										   IsVisible="False"
										   Text="{x:Static resources:Labels.Label_Max}">
									<i:Interaction.Behaviors>
										<ia:DataTriggerBehavior Binding="{Binding Path=SlackLimit}" ComparisonCondition="Equal" Value="{x:Static sys:Int32.MaxValue}">
											<ia:ChangePropertyAction TargetObject="{Binding #maxEditableTextBlock}" PropertyName="IsVisible" Value="True" />
										</ia:DataTriggerBehavior>
										<ia:DataTriggerBehavior Binding="{Binding Path=SlackLimit}" ComparisonCondition="NotEqual" Value="{x:Static sys:Int32.MaxValue}">
											<ia:ChangePropertyAction TargetObject="{Binding #maxEditableTextBlock}" PropertyName="IsVisible" Value="False" />
										</ia:DataTriggerBehavior>
									</i:Interaction.Behaviors>
								</TextBlock>
							</Grid>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn CanUserResize="True"
										CanUserReorder="True"
										CanUserSort="True"
										CustomSortComparer="{StaticResource criticalityWeightSortComparer}"
										Width="130">
					<DataGridTemplateColumn.HeaderTemplate>
						<DataTemplate>
							<TextBlock VerticalAlignment="Center"
									   Margin="0"
									   Padding="3"
									   Text="{x:Static resources:Labels.Label_CriticalityWeight}"
									   ToolTip.Tip="{x:Static resources:ToolTips.ToolTip_CriticalityWeight}"/>
						</DataTemplate>
					</DataGridTemplateColumn.HeaderTemplate>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Grid VerticalAlignment="Stretch"
								  Classes="editable">
								<TextBlock VerticalAlignment="Center"
										   Margin="0"
										   Padding="3"
										   Text="{Binding Path=CriticalityWeight, Mode=OneWay, StringFormat=\{0:N3\}}"/>
							</Grid>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<u:NumericDoubleUpDown Value="{Binding Path=CriticalityWeight, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
												   VerticalAlignment="Center"
												   ShowButtonSpinner="False"
												   Focusable="True"
												   Margin="0"
												   Padding="0"
												   Minimum="0"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn CanUserResize="True"
										CanUserReorder="True"
										CanUserSort="True"
										CustomSortComparer="{StaticResource fibonacciWeightSortComparer}"
										Width="135">
					<DataGridTemplateColumn.HeaderTemplate>
						<DataTemplate>
							<TextBlock VerticalAlignment="Center"
									   Margin="0"
									   Padding="3"
									   Text="{x:Static resources:Labels.Label_FibonacciWeight}"
									   ToolTip.Tip="{x:Static resources:ToolTips.ToolTip_FibonacciWeight}"/>
						</DataTemplate>
					</DataGridTemplateColumn.HeaderTemplate>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Grid VerticalAlignment="Stretch"
								  Classes="editable">
								<TextBlock VerticalAlignment="Center"
										   Margin="0"
										   Padding="3"
										   Text="{Binding Path=FibonacciWeight, Mode=OneWay, StringFormat=\{0:N3\}}"/>
							</Grid>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<u:NumericDoubleUpDown Value="{Binding Path=FibonacciWeight, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
												   VerticalAlignment="Center"
												   ShowButtonSpinner="False"
												   Focusable="True"
												   Margin="0"
												   Padding="0"
												   Minimum="0"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn CanUserResize="True"
										CanUserReorder="True"
										CanUserSort="True"
										IsReadOnly="True"
										CustomSortComparer="{StaticResource colorFormatSortComparer}"
										Width="75">
					<DataGridTemplateColumn.HeaderTemplate>
						<DataTemplate>
							<TextBlock VerticalAlignment="Center"
									   Margin="0"
									   Padding="3"
									   Text="{x:Static resources:Labels.Label_ColorFormat}"
									   ToolTip.Tip="{x:Static resources:ToolTips.ToolTip_ColorFormat}"/>
						</DataTemplate>
					</DataGridTemplateColumn.HeaderTemplate>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Grid VerticalAlignment="Stretch"
								  Classes="editable">
								<ColorPicker Cursor="Hand"
											 Color="{Binding Path=ColorFormat, Mode=TwoWay, Converter={StaticResource colorFormatToColorConverter}, UpdateSourceTrigger=LostFocus}"/>
							</Grid>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
			</DataGrid.Columns>
		</DataGrid>
	</DockPanel>
</UserControl>
